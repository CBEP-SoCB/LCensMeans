% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LNConditionalMeans.R
\name{find_parms}
\alias{find_parms}
\title{Calculate maximum likelihood parameter estimates from censored data.}
\usage{
find_parms(cc, flg, start = c(1, 1))
}
\arguments{
\item{cc}{A vector of data values, including both observed values, where they
exist, or the detection limits, where data was censored.}

\item{flg}{A vector of TRUE or FALSE values, of the same length as cc, that
indicates which values are detection limits (TRUE) and which are measured
values (FALSE).}

\item{start}{A list or vector containing parameters of the underlying
uncensored probability distribution (e.g., mean and SD of the related
normal distribution for the default lognormal distribution).  This is used
to initialize the numerical search for maximum likelihood estimates.  A
good starting value may help speed the convergence. If convergence is not
achieved, consider providing a better starting point for the optimization.}
}
\value{
Vector of (named) Maximum likelihood estimators of parameters to the
  underlying (uncensored) probability distribution.  (By default, a lognormal
  distribution). The calculated log likelihood under a censored lognormal
  distribution with the specific parameters.
}
\description{
Calculate maximum likelihood parameter estimates for underlying (uncensored)
distribution based on left censored data.  This is a thin wrapper around
maxLik::maxLik() that strips any missing values and sets it up with
lc_loglik() and a simple default starting point for optimization.
Unlike maxLIk(), the return value is ONLY the parameter values, not the whole
maxLik object.
}
\examples{
 df <- data.frame(sim = sort(stats::rlnorm(25,2,3)),
                  cens=c(rep.int(TRUE,5), rep.int(FALSE,20)))
 df$sim[1:4] <- df$sim[5]
 find_parms(df$sim, df$cens, c(2,5))
 find_parms(df$sim, df$cens, c(lmu=2,lsigma=5))
 find_parms(df$sim, df$cens, c(1,1))
}
\references{
Henningsen, Arne and Toomet, Ott (2011). maxLik: A package for maximum
 likelihood estimation in R. Computational Statistics 26(3), 443-458. DOI
 10.1007/s00180-010-0217-1.
}
